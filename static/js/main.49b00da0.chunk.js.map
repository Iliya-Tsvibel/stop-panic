{"version":3,"sources":["components/Home.jsx","components/About.jsx","components/News.jsx","components/CustomNavbar.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["Home","Grid","Jumbotron","Link","to","Button","bsStyle","Row","className","Col","xs","sm","Image","src","circle","Component","About","smOffset","rounded","News","CustomNavbar","Navbar","default","collapseOnSelect","Header","Brand","Toggle","Collapse","Nav","pullRight","NavItem","eventKey","componentClass","href","App","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.49b00da0.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Jumbotron, Grid, Row, Col, Image, Button } from 'react-bootstrap';\nimport './Home.css';\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <Grid>\n        <Jumbotron>\n          <h2>Welcome to StopPanic (Under constraction)</h2>\n          <p>Anxiety and Panic Disorder Telemedicine Project</p>\n          <Link to=\"/about\">\n            <Button bsStyle=\"primary\">Learn More</Button>\n          </Link>\n        </Jumbotron>\n        <Row className=\"show-grid text-center\">\n          <Col xs={12} sm={4} className=\"person-wrapper\">\n            <Image src=\"https://iliya-hacker.github.io/stop-panic/assets/call.png\" circle className=\"profile-pic\"/>\n            <h3>Talk</h3>\n            <p>Choose voice or video call for getting immediate mental help.</p>\n          </Col>\n          <Col xs={12} sm={4} className=\"person-wrapper\">\n            <Image src=\"https://iliya-hacker.github.io/stop-panic/assets/chat.png\" circle className=\"profile-pic\"/>\n            <h3>Chat</h3>\n            <p>Chat with people who know what anxiety disorder is and who will understand you.</p>\n          </Col>\n          <Col xs={12} sm={4} className=\"person-wrapper\">\n            <Image src=\"https://iliya-hacker.github.io/stop-panic/assets/pharma.png\" circle className=\"profile-pic\"/>\n            <h3>Get the recipe</h3>\n            <p>Find a qualified professional. Consult. Get a prescription for medicines.</p>\n          </Col>\n        </Row>\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Grid, Col, Image } from 'react-bootstrap';\nimport './About.css';\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div>\n        <Image src=\"https://iliya-hacker.github.io/stop-panic/assets/road.jpg\" className=\"header-image\" />\n        <Grid>\n          <Col xs={12} sm={8} smOffset={2}>\n            <Image src=\"https://iliya-hacker.github.io/stop-panic/assets/lotos.jpg\" className=\"about-profile-pic\" rounded />\n            <h3>About Stop Panic project</h3>\n            <p>The project is intended for people suffering from anxiety or panic disorder.</p>\n            <p>We create this for the purpose of providing people with quick and effective mental and medical assistance.</p>\n            <p>Anxiety disorder is the plague of our time. Now, when uncertainty reigns on the horizon, millions of people need to receive support and relief from suffering, to find peace and confidence in their own strengths again.</p>\n            <p>The project will consist of three parts. The first is an informative part with materials on anxiety and panic disorder, which will collect the latest news on new treatments.</p>\n            <p>The second is instant psychological support 24/7 through video calls.</p>\n            <p>The third is the search for an affordable and quality specialist, the ability to remotely receive the necessary instructions, including a prescription for the necessary drugs.</p>\n            <p>The project is currently under development project.</p>\n          \n          </Col>\n        </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Grid, Row, Col, Image } from 'react-bootstrap';\nimport './News.css';\n\nexport default class News extends Component {\n  render() {\n    return (\n      <div>\n        <Image src=\"https://iliya-hacker.github.io/stop-panic/assets/hous.jpg\" className=\"header-image\" />\n        <Grid>\n          <h2>News</h2>\n          <Row>\n            <Col xs={12} sm={8} className=\"main-section\">\n            <p>Here will be published news about the latest advances in the treatment of anxiety and panic disorders.</p>\n            </Col>\n            <Col xs={12} sm={4} className=\"sidebar-section\">\n              <Image src=\"https://iliya-hacker.github.io/stop-panic/assets/road.jpg\" />\n              <p>Our task is to provide the most relevant news.</p>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './CustomNavbar.css'\n\nexport default class CustomNavbar extends Component {\n  render() {\n    return (\n      <Navbar default collapseOnSelect>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <Link to=\"/stop-panic\">StopPanic</Link>\n          </Navbar.Brand>\n          <Navbar.Toggle />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <Nav pullRight>\n            <NavItem eventKey={1} componentClass={Link} href=\"/stop-panic\" to=\"/stop-panic\">\n              Home\n            </NavItem>\n            <NavItem eventKey={2} componentClass={Link} href=\"/about\" to=\"/about\">\n              About\n            </NavItem>\n            <NavItem eventKey={3} componentClass={Link} href=\"/news\" to=\"/news\">\n              News\n            </NavItem>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport News from './components/News';\nimport Navbar from './components/CustomNavbar';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar />\n          <Route exact path=\"/stop-panic\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/news\" component={News} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}